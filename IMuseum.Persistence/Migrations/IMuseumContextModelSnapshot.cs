// <auto-generated />
using System;
using IMuseum.Persistence.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IMuseum.Persistence.Migrations
{
    [DbContext(typeof(IMuseumContext))]
    partial class IMuseumContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("IMuseum.Persistence.Models.Artwork", b =>
                {
                    b.Property<Guid>("ArtworkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("AddDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Assessment")
                        .HasColumnType("TEXT");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Period")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("RoomId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ArtworkId");

                    b.HasIndex("RoomId");

                    b.ToTable("Artwork", (string)null);
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.FriendMuseum", b =>
                {
                    b.Property<Guid>("FriendMuseumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("FriendMuseumId");

                    b.ToTable("FriendMuseums");
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.Loan", b =>
                {
                    b.Property<Guid>("LoanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ApplicationLoanApplicationId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("TEXT");

                    b.HasKey("LoanId");

                    b.HasIndex("ApplicationLoanApplicationId");

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.LoanApplication", b =>
                {
                    b.Property<Guid>("LoanApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ArtworkId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Duration")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("MuseumFriendMuseumId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LoanApplicationId");

                    b.HasIndex("ArtworkId");

                    b.HasIndex("MuseumFriendMuseumId");

                    b.ToTable("LoanApplication");
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.Restoration", b =>
                {
                    b.Property<Guid>("RestorationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ArtworkId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("RestorationId");

                    b.HasIndex("ArtworkId");

                    b.ToTable("Restorations");
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.Room", b =>
                {
                    b.Property<Guid>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("RoomId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.ArtworkInPosess", b =>
                {
                    b.HasBaseType("IMuseum.Persistence.Models.Artwork");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.ToTable("ArtworkInPosess ", (string)null);
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.PlasticArt", b =>
                {
                    b.HasBaseType("IMuseum.Persistence.Models.ArtworkInPosess");

                    b.ToTable("PlasticArt ", (string)null);
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.Painting", b =>
                {
                    b.HasBaseType("IMuseum.Persistence.Models.PlasticArt");

                    b.ToTable("Painting ", (string)null);
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.Sculpture", b =>
                {
                    b.HasBaseType("IMuseum.Persistence.Models.PlasticArt");

                    b.ToTable("Sculpture ", (string)null);
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.Artwork", b =>
                {
                    b.HasOne("IMuseum.Persistence.Models.Room", null)
                        .WithMany("Artworks")
                        .HasForeignKey("RoomId");
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.Loan", b =>
                {
                    b.HasOne("IMuseum.Persistence.Models.LoanApplication", "Application")
                        .WithMany()
                        .HasForeignKey("ApplicationLoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.LoanApplication", b =>
                {
                    b.HasOne("IMuseum.Persistence.Models.ArtworkInPosess", "Artwork")
                        .WithMany()
                        .HasForeignKey("ArtworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IMuseum.Persistence.Models.FriendMuseum", "Museum")
                        .WithMany()
                        .HasForeignKey("MuseumFriendMuseumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artwork");

                    b.Navigation("Museum");
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.Restoration", b =>
                {
                    b.HasOne("IMuseum.Persistence.Models.ArtworkInPosess", "Artwork")
                        .WithMany()
                        .HasForeignKey("ArtworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artwork");
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.ArtworkInPosess", b =>
                {
                    b.HasOne("IMuseum.Persistence.Models.Artwork", null)
                        .WithOne()
                        .HasForeignKey("IMuseum.Persistence.Models.ArtworkInPosess", "ArtworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.PlasticArt", b =>
                {
                    b.HasOne("IMuseum.Persistence.Models.ArtworkInPosess", null)
                        .WithOne()
                        .HasForeignKey("IMuseum.Persistence.Models.PlasticArt", "ArtworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.Painting", b =>
                {
                    b.HasOne("IMuseum.Persistence.Models.PlasticArt", null)
                        .WithOne()
                        .HasForeignKey("IMuseum.Persistence.Models.Painting", "ArtworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.Sculpture", b =>
                {
                    b.HasOne("IMuseum.Persistence.Models.PlasticArt", null)
                        .WithOne()
                        .HasForeignKey("IMuseum.Persistence.Models.Sculpture", "ArtworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.Room", b =>
                {
                    b.Navigation("Artworks");
                });
#pragma warning restore 612, 618
        }
    }
}
