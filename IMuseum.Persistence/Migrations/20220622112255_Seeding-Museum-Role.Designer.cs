// <auto-generated />
using System;
using IMuseum.Persistence.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IMuseum.Persistence.Migrations
{
    [DbContext(typeof(IMuseumContext))]
    [Migration("20220622112255_Seeding-Museum-Role")]
    partial class SeedingMuseumRole
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("IMuseum.Persistence.Models.Artwork", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("AddTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Assessment")
                        .HasColumnType("TEXT");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("CurrentSatus")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("IncorporatedDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MuseumId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Period")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MuseumId");

                    b.HasIndex("RoomId");

                    b.ToTable("Artworks");
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("AddTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ArtworkId")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Bytes")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("Size")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ArtworkId");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.Loan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("AddTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.LoanApplication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("AddTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ArtworkId")
                        .HasColumnType("TEXT");

                    b.Property<int>("CurrentStatus")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("Duration")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("LoanId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RelatedMuseumId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ArtworkId");

                    b.HasIndex("LoanId")
                        .IsUnique();

                    b.HasIndex("RelatedMuseumId");

                    b.ToTable("LoanApplications");
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.Museum", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("AddTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Museums");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1bc1d70e-68e9-40d1-82fb-f6ae3102d277"),
                            AddTime = new DateTime(2022, 6, 22, 13, 22, 54, 774, DateTimeKind.Local).AddTicks(5726),
                            Deleted = false,
                            Name = "Louvre Museum"
                        },
                        new
                        {
                            Id = new Guid("b116223d-f86a-4716-98ca-c72db7967338"),
                            AddTime = new DateTime(2022, 6, 22, 13, 22, 54, 774, DateTimeKind.Local).AddTicks(5797),
                            Deleted = false,
                            Name = "British Museum"
                        },
                        new
                        {
                            Id = new Guid("9d482011-47e9-4b22-9c64-f12531b3f309"),
                            AddTime = new DateTime(2022, 6, 22, 13, 22, 54, 774, DateTimeKind.Local).AddTicks(5800),
                            Deleted = false,
                            Name = "London Arqueology Museum"
                        },
                        new
                        {
                            Id = new Guid("3ab3aac9-eceb-4fa4-a237-aaab8fec8e65"),
                            AddTime = new DateTime(2022, 6, 22, 13, 22, 54, 774, DateTimeKind.Local).AddTicks(5803),
                            Deleted = false,
                            Name = "New York Museum"
                        },
                        new
                        {
                            Id = new Guid("03b3a8ff-64c7-4479-97f1-c969f911c0e4"),
                            AddTime = new DateTime(2022, 6, 22, 13, 22, 54, 774, DateTimeKind.Local).AddTicks(5805),
                            Deleted = false,
                            Name = "Vatican City Museum"
                        },
                        new
                        {
                            Id = new Guid("88c9f40e-0cea-4429-9a59-c6ddab2b1c9a"),
                            AddTime = new DateTime(2022, 6, 22, 13, 22, 54, 774, DateTimeKind.Local).AddTicks(5808),
                            Deleted = false,
                            Name = "Kiko's Gallery"
                        },
                        new
                        {
                            Id = new Guid("1f2b9e19-12f0-48dd-8195-0461f8f1c85e"),
                            AddTime = new DateTime(2022, 6, 22, 13, 22, 54, 774, DateTimeKind.Local).AddTicks(5810),
                            Deleted = false,
                            Name = "LeTize Museum"
                        });
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.Restoration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("AddTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ArtworkId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ArtworkId");

                    b.ToTable("Restorations");
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("AddTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("05fae288-f85a-4819-832d-94ef6fcdb0cb"),
                            AddTime = new DateTime(2022, 6, 22, 13, 22, 54, 774, DateTimeKind.Local).AddTicks(5937),
                            Deleted = false,
                            Name = "Role 1"
                        },
                        new
                        {
                            Id = new Guid("8ff89b90-7276-4d48-a4fb-a9699e63d8df"),
                            AddTime = new DateTime(2022, 6, 22, 13, 22, 54, 774, DateTimeKind.Local).AddTicks(5952),
                            Deleted = false,
                            Name = "Role 2"
                        },
                        new
                        {
                            Id = new Guid("4d81b283-eeda-4074-86a9-c588d7288b2b"),
                            AddTime = new DateTime(2022, 6, 22, 13, 22, 54, 774, DateTimeKind.Local).AddTicks(5955),
                            Deleted = false,
                            Name = "Role 3"
                        },
                        new
                        {
                            Id = new Guid("750f1c9f-686e-499d-9d47-c11908b7148d"),
                            AddTime = new DateTime(2022, 6, 22, 13, 22, 54, 774, DateTimeKind.Local).AddTicks(5957),
                            Deleted = false,
                            Name = "Role 4"
                        },
                        new
                        {
                            Id = new Guid("82097ae9-7cc6-46ef-b222-8f257920098a"),
                            AddTime = new DateTime(2022, 6, 22, 13, 22, 54, 774, DateTimeKind.Local).AddTicks(5960),
                            Deleted = false,
                            Name = "Role 5"
                        },
                        new
                        {
                            Id = new Guid("19679ee9-7236-4d68-a0f6-ac44ea1f7499"),
                            AddTime = new DateTime(2022, 6, 22, 13, 22, 54, 774, DateTimeKind.Local).AddTicks(6002),
                            Deleted = false,
                            Name = "Role 6"
                        },
                        new
                        {
                            Id = new Guid("d73b35cb-d5b6-47a2-bffb-7226c3abc8a9"),
                            AddTime = new DateTime(2022, 6, 22, 13, 22, 54, 774, DateTimeKind.Local).AddTicks(6005),
                            Deleted = false,
                            Name = "Role 7"
                        });
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("AddTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("AddTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.Property<Guid>("RelatedUsersId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RolesId")
                        .HasColumnType("TEXT");

                    b.HasKey("RelatedUsersId", "RolesId");

                    b.HasIndex("RolesId");

                    b.ToTable("RoleUser");
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.PlasticArt", b =>
                {
                    b.HasBaseType("IMuseum.Persistence.Models.Artwork");

                    b.Property<string>("Style")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable("PlasticArt");
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.Painting", b =>
                {
                    b.HasBaseType("IMuseum.Persistence.Models.PlasticArt");

                    b.Property<string>("Media")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable("Paintings");
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.Sculpture", b =>
                {
                    b.HasBaseType("IMuseum.Persistence.Models.PlasticArt");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable("Sculpture");
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.Artwork", b =>
                {
                    b.HasOne("IMuseum.Persistence.Models.Museum", "Museum")
                        .WithMany("Artworks")
                        .HasForeignKey("MuseumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IMuseum.Persistence.Models.Room", "Room")
                        .WithMany("Artworks")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Museum");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.Image", b =>
                {
                    b.HasOne("IMuseum.Persistence.Models.Artwork", "Artwork")
                        .WithMany("Images")
                        .HasForeignKey("ArtworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artwork");
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.LoanApplication", b =>
                {
                    b.HasOne("IMuseum.Persistence.Models.Artwork", "Artwork")
                        .WithMany("LoanApplications")
                        .HasForeignKey("ArtworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IMuseum.Persistence.Models.Loan", "LoanRelated")
                        .WithOne("Application")
                        .HasForeignKey("IMuseum.Persistence.Models.LoanApplication", "LoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IMuseum.Persistence.Models.Museum", "RelatedMuseum")
                        .WithMany("LoanApplications")
                        .HasForeignKey("RelatedMuseumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artwork");

                    b.Navigation("LoanRelated");

                    b.Navigation("RelatedMuseum");
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.Restoration", b =>
                {
                    b.HasOne("IMuseum.Persistence.Models.Artwork", "Artwork")
                        .WithMany("Restorations")
                        .HasForeignKey("ArtworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artwork");
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.HasOne("IMuseum.Persistence.Models.User", null)
                        .WithMany()
                        .HasForeignKey("RelatedUsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IMuseum.Persistence.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.PlasticArt", b =>
                {
                    b.HasOne("IMuseum.Persistence.Models.Artwork", null)
                        .WithOne()
                        .HasForeignKey("IMuseum.Persistence.Models.PlasticArt", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.Painting", b =>
                {
                    b.HasOne("IMuseum.Persistence.Models.PlasticArt", null)
                        .WithOne()
                        .HasForeignKey("IMuseum.Persistence.Models.Painting", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.Sculpture", b =>
                {
                    b.HasOne("IMuseum.Persistence.Models.PlasticArt", null)
                        .WithOne()
                        .HasForeignKey("IMuseum.Persistence.Models.Sculpture", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.Artwork", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("LoanApplications");

                    b.Navigation("Restorations");
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.Loan", b =>
                {
                    b.Navigation("Application")
                        .IsRequired();
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.Museum", b =>
                {
                    b.Navigation("Artworks");

                    b.Navigation("LoanApplications");
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.Room", b =>
                {
                    b.Navigation("Artworks");
                });
#pragma warning restore 612, 618
        }
    }
}
