// <auto-generated />
using System;
using IMuseum.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IMuseum.Persistence.Migrations
{
    [DbContext(typeof(IMuseumContext))]
    [Migration("20220623191426_aditional-data")]
    partial class aditionaldata
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("IMuseum.Persistence.Models.Artwork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AddTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Assessment")
                        .HasColumnType("TEXT");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("CurrentSatus")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("IncorporatedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("MuseumId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Period")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RoomId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MuseumId");

                    b.HasIndex("RoomId");

                    b.ToTable("Artworks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddTime = new DateTime(2022, 6, 23, 21, 14, 26, 475, DateTimeKind.Local).AddTicks(9439),
                            Assessment = 10m,
                            Author = "Unknown",
                            CreationDate = new DateTime(2022, 6, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentSatus = 3,
                            Deleted = false,
                            Description = "It is just a simple tapice.",
                            IncorporatedDate = new DateTime(2022, 6, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MuseumId = 1,
                            Period = "ooold",
                            RoomId = 1,
                            Title = "The tapice"
                        });
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AddTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("ArtworkId")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Bytes")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("Size")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ArtworkId");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.Loan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AddTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("LoanAplicationId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Loans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddTime = new DateTime(2022, 6, 23, 21, 14, 26, 475, DateTimeKind.Local).AddTicks(9400),
                            Deleted = false,
                            LoanAplicationId = 1,
                            PaymentAmount = 10m,
                            StartDate = new DateTime(2022, 6, 23, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            AddTime = new DateTime(2022, 6, 23, 21, 14, 26, 475, DateTimeKind.Local).AddTicks(9405),
                            Deleted = false,
                            LoanAplicationId = 2,
                            PaymentAmount = 20m,
                            StartDate = new DateTime(2022, 3, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.LoanApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AddTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("ArtworkId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CurrentStatus")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("Duration")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LoanId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MuseumId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ArtworkId");

                    b.HasIndex("LoanId")
                        .IsUnique();

                    b.HasIndex("MuseumId");

                    b.ToTable("LoanApplications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddTime = new DateTime(2022, 6, 23, 21, 14, 26, 475, DateTimeKind.Local).AddTicks(9417),
                            ApplicationDate = new DateTime(2022, 6, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ArtworkId = 1,
                            CurrentStatus = 0,
                            Deleted = false,
                            Duration = 10,
                            LoanId = 1,
                            MuseumId = 1
                        },
                        new
                        {
                            Id = 2,
                            AddTime = new DateTime(2022, 6, 23, 21, 14, 26, 475, DateTimeKind.Local).AddTicks(9421),
                            ApplicationDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ArtworkId = 1,
                            CurrentStatus = 0,
                            Deleted = false,
                            Duration = 10,
                            LoanId = 2,
                            MuseumId = 1
                        });
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.Museum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AddTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Museums");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddTime = new DateTime(2022, 6, 23, 21, 14, 26, 475, DateTimeKind.Local).AddTicks(9223),
                            Deleted = false,
                            Name = "Louvre Museum"
                        },
                        new
                        {
                            Id = 2,
                            AddTime = new DateTime(2022, 6, 23, 21, 14, 26, 475, DateTimeKind.Local).AddTicks(9259),
                            Deleted = false,
                            Name = "British Museum"
                        },
                        new
                        {
                            Id = 3,
                            AddTime = new DateTime(2022, 6, 23, 21, 14, 26, 475, DateTimeKind.Local).AddTicks(9261),
                            Deleted = false,
                            Name = "London Arqueology Museum"
                        },
                        new
                        {
                            Id = 4,
                            AddTime = new DateTime(2022, 6, 23, 21, 14, 26, 475, DateTimeKind.Local).AddTicks(9263),
                            Deleted = false,
                            Name = "New York Museum"
                        },
                        new
                        {
                            Id = 5,
                            AddTime = new DateTime(2022, 6, 23, 21, 14, 26, 475, DateTimeKind.Local).AddTicks(9264),
                            Deleted = false,
                            Name = "Vatican City Museum"
                        },
                        new
                        {
                            Id = 6,
                            AddTime = new DateTime(2022, 6, 23, 21, 14, 26, 475, DateTimeKind.Local).AddTicks(9266),
                            Deleted = false,
                            Name = "Kiko's Gallery"
                        },
                        new
                        {
                            Id = 7,
                            AddTime = new DateTime(2022, 6, 23, 21, 14, 26, 475, DateTimeKind.Local).AddTicks(9268),
                            Deleted = false,
                            Name = "LeTize Museum"
                        });
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.Restoration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AddTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("ArtworkId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ArtworkId");

                    b.ToTable("Restorations");
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AddTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 8,
                            AddTime = new DateTime(2022, 6, 23, 21, 14, 26, 475, DateTimeKind.Local).AddTicks(9368),
                            Deleted = false,
                            Name = "Role 1"
                        },
                        new
                        {
                            Id = 9,
                            AddTime = new DateTime(2022, 6, 23, 21, 14, 26, 475, DateTimeKind.Local).AddTicks(9371),
                            Deleted = false,
                            Name = "Role 2"
                        },
                        new
                        {
                            Id = 10,
                            AddTime = new DateTime(2022, 6, 23, 21, 14, 26, 475, DateTimeKind.Local).AddTicks(9373),
                            Deleted = false,
                            Name = "Role 3"
                        },
                        new
                        {
                            Id = 11,
                            AddTime = new DateTime(2022, 6, 23, 21, 14, 26, 475, DateTimeKind.Local).AddTicks(9375),
                            Deleted = false,
                            Name = "Role 4"
                        },
                        new
                        {
                            Id = 12,
                            AddTime = new DateTime(2022, 6, 23, 21, 14, 26, 475, DateTimeKind.Local).AddTicks(9377),
                            Deleted = false,
                            Name = "Role 5"
                        },
                        new
                        {
                            Id = 13,
                            AddTime = new DateTime(2022, 6, 23, 21, 14, 26, 475, DateTimeKind.Local).AddTicks(9378),
                            Deleted = false,
                            Name = "Role 6"
                        },
                        new
                        {
                            Id = 14,
                            AddTime = new DateTime(2022, 6, 23, 21, 14, 26, 475, DateTimeKind.Local).AddTicks(9380),
                            Deleted = false,
                            Name = "Role 7"
                        });
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AddTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddTime = new DateTime(2022, 6, 23, 21, 14, 26, 475, DateTimeKind.Local).AddTicks(9455),
                            Deleted = false,
                            Name = "Davinci"
                        },
                        new
                        {
                            Id = 2,
                            AddTime = new DateTime(2022, 6, 23, 21, 14, 26, 475, DateTimeKind.Local).AddTicks(9457),
                            Deleted = false,
                            Name = "Gallery"
                        },
                        new
                        {
                            Id = 3,
                            AddTime = new DateTime(2022, 6, 23, 21, 14, 26, 475, DateTimeKind.Local).AddTicks(9459),
                            Deleted = false,
                            Name = "Galileo"
                        });
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AddTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.Property<int>("RelatedUsersId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RolesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RelatedUsersId", "RolesId");

                    b.HasIndex("RolesId");

                    b.ToTable("RoleUser");
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.Artwork", b =>
                {
                    b.HasOne("IMuseum.Persistence.Models.Museum", "Museum")
                        .WithMany("Artworks")
                        .HasForeignKey("MuseumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IMuseum.Persistence.Models.Room", "Room")
                        .WithMany("Artworks")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Museum");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.Image", b =>
                {
                    b.HasOne("IMuseum.Persistence.Models.Artwork", "Artwork")
                        .WithMany("Images")
                        .HasForeignKey("ArtworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artwork");
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.LoanApplication", b =>
                {
                    b.HasOne("IMuseum.Persistence.Models.Artwork", "Artwork")
                        .WithMany("LoanApplications")
                        .HasForeignKey("ArtworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IMuseum.Persistence.Models.Loan", "LoanRelated")
                        .WithOne("Application")
                        .HasForeignKey("IMuseum.Persistence.Models.LoanApplication", "LoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IMuseum.Persistence.Models.Museum", "RelatedMuseum")
                        .WithMany("LoanApplications")
                        .HasForeignKey("MuseumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artwork");

                    b.Navigation("LoanRelated");

                    b.Navigation("RelatedMuseum");
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.Restoration", b =>
                {
                    b.HasOne("IMuseum.Persistence.Models.Artwork", "Artwork")
                        .WithMany("Restorations")
                        .HasForeignKey("ArtworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artwork");
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.HasOne("IMuseum.Persistence.Models.User", null)
                        .WithMany()
                        .HasForeignKey("RelatedUsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IMuseum.Persistence.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.Artwork", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("LoanApplications");

                    b.Navigation("Restorations");
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.Loan", b =>
                {
                    b.Navigation("Application")
                        .IsRequired();
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.Museum", b =>
                {
                    b.Navigation("Artworks");

                    b.Navigation("LoanApplications");
                });

            modelBuilder.Entity("IMuseum.Persistence.Models.Room", b =>
                {
                    b.Navigation("Artworks");
                });
#pragma warning restore 612, 618
        }
    }
}
